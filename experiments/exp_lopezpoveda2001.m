function exp_lopezpoveda2001(varargin)
%LOPEZPOVEDA2001   Iso-itensity curves of the DRNL Lopez-Poveda and Meddis (2001)
%   Usage: lopezpoveda2001_fig3bc;
%
%   Isointensity response of the linear, nonlinear and summed response of the
%   DRNL filter
%
%   This script reproduces figure 3 and 4 Lopez-Poveda and Meddis 2001
%
%R  lopezpoveda2001hnc
  
%  AUTHOR: Katharina Egger

%% ------ Check input options --------------------------------------------

  definput.flags.type = {'fig3b','fig3c','fig4'};
  definput.flags.plot = {'noplot','plot'};

  % Parse input options
  [flags,keyvals]  = ltfatarghelper({},definput,varargin);
        

if flags.do_fig3b
  
  %% parameter set of YO, table I at 1000Hz
  exppars= {...
      'flow',1000,...
      'fhigh',1000,...
      'basef',1000,...
      'bwmul',1,...      
      'lin_fc', [log10(945) 0],...
      'lin_bw', [log10(240) 0],...
      'lin_gain', [log10(520) 0],...
      'lin_lp_cutoff', [log10(945) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'nlin_fc_before', [log10(1000) 0],...
      'nlin_fc_after', [log10(1000) 0],...
      'nlin_bw_before', [log10(175) 0],...
      'nlin_bw_after', [log10(175) 0],...
      'nlin_lp_cutoff', [log10(1000) 0],...      
      'nlin_a', [log10(4598) 0],...
      'nlin_b', [log10(0.130) 0],...
      'nlin_c', [log10(0.25) 0] };
  
  %% input signal
  % 50ms pure tones, sampled at 100kHz
  fs = 100000;
  T = 0.05;       
  t = (0:1/fs:T - 1/fs)';
  fsig = 250:25:1750;    
    
  %% Lopez-Poveda and Meddis 2001, Figure 3, b)
  level = 10^(30/20);
  
  result = zeros(1,length(fsig));
  lin = zeros(1,length(fsig));
  nlin = zeros(1,length(fsig));
  
  for ii = 1:length(fsig)
    
    insig = sin(2*pi*fsig(ii).*t)*(2^0.5) * level;  
    
    hp_fir = headphonefilter(fs);
    insig = filter(hp_fir,1,insig);
    
    [y_lin, ~] = drnl(insig, fs, exppars{:},'linonly');
    
    [y_nlin, ~] = drnl(insig, fs, exppars{:},'nlinonly');
    
    y_lin = gaindb(y_lin,-50);   % undo the 50dB gain in the drnl (not used in Lopez-Poveda and Meddis 2001)
    y_nlin = gaindb(y_nlin,-50);
    outsig = y_lin + y_nlin;
    
    result(1,ii) = rms(outsig(floor(length(insig)/2):end));
    lin(1,ii) = rms(y_lin(floor(length(insig)/2):end));
    nlin(1,ii) = rms(y_nlin(floor(length(insig)/2):end));
  end
  
  plot(fsig,result)
  hold on
  plot(fsig,lin,'-.g')
  plot(fsig,nlin,':r')
  set(gca,'YScale','log')
  % grid on
  set(gca,'XLim',[250 1750],'Layer','top')
  set(gca,'YLim',[1e-07 1e-03],'Layer','top')
  title('30 dB SPL')
  xlabel('Frequency (Hz)')
  ylabel('DRNL filter output (m/s)')
  
end;


if flags.do_fig3c
  %% Lopez-Poveda and Meddis 2001, Figure 3, c)

  result = zeros(1,length(fsig));
  lin = zeros(1,length(fsig));
  nlin = zeros(1,length(fsig));
  
  level = 10^(85/20);
  
  for ii = 1:length(fsig)
    
    insig = sin(2*pi*fsig(ii).*t)*(2^0.5)* level;
    hp_fir = headphonefilter(fs);
    insig = filter(hp_fir,1,insig);
    
    [y_lin, ~] = drnl(insig, fs, exppars{:},'linonly');
    
    [y_nlin, ~] = drnl(insig, fs, exppars{:},'nlinonly');

    y_lin = gaindb(y_lin,-50);
    y_nlin = gaindb(y_nlin,-50);
    outsig = y_lin + y_nlin;
        
    result(1,ii) = rms(outsig(floor(length(insig)/2):end));
    lin(1,ii) = rms(y_lin(floor(length(insig)/2):end));
    nlin(1,ii) = rms(y_nlin(floor(length(insig)/2):end));
    
  end
  
  plot(fsig,result)
  hold on
  plot(fsig,lin,'-.g')
  plot(fsig,nlin,':r')
  set(gca,'YScale','log')
  % grid on
  set(gca,'XLim',[250 1750],'Layer','top')
  set(gca,'YLim',[1e-05 1e-01],'Layer','top')
  title('85 dB SPL')
  xlabel('Frequency (Hz)')
  ylabel('DRNL filter output (m/s)')
  legend('DRNL output', 'Linear path output', 'Nonlinear path output')
  %set(gcf,'Position',[50,50,270,760])
  %set(gcf,'Position',[50,50,400,760])
  
end;


if flags.do_fig4

  %% parameter set of YO, table I
  % The data is specified in this way, because the data for figure 4 is
  % not specified as the two parameter fit, but instead specified
  % directly. The parameters below accomplish this by removing all
  % frequency dependence in the DRNL. The parameters can then be
  % specified exactly for a single frequency, but only for one frequency
  % at a time.
  f250 = {...
      'flow',250,...
      'fhigh',250,...
      'basef',250,...
      'bwmul',1,...      
      'lin_fc', [log10(235) 0],...
      'lin_bw', [log10(115) 0],...
      'lin_gain', [log10(1400) 0],...
      'lin_lp_cutoff', [log10(235) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'nlin_fc_before', [log10(250) 0],...
      'nlin_fc_after', [log10(250) 0],...
      'nlin_bw_before', [log10(84) 0],...
      'nlin_bw_after', [log10(84) 0],...
      'nlin_lp_cutoff', [log10(250) 0],...      
      'nlin_a', [log10(2124) 0],...
      'nlin_b', [log10(0.45) 0],...
      'nlin_c', [log10(0.25) 0] };

  f500 = {...
      'flow',500,...
      'fhigh',500,...
      'basef',500,...
      'bwmul',1,...      
      'lin_fc', [log10(460) 0],...
      'lin_bw', [log10(150) 0],...
      'lin_gain', [log10(800) 0],...
      'lin_lp_cutoff', [log10(460) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'nlin_fc_before', [log10(500) 0],...
      'nlin_fc_after', [log10(500) 0],...
      'nlin_bw_before', [log10(103) 0],...
      'nlin_bw_after', [log10(103) 0],...
      'nlin_lp_cutoff', [log10(500) 0],...      
      'nlin_a', [log10(4609) 0],...
      'nlin_b', [log10(0.28) 0],...
      'nlin_c', [log10(0.25) 0] };
  
  f1000 = {...
      'flow',1000,...
      'fhigh',1000,...
      'basef',1000,...
      'bwmul',1,...      
      'lin_fc', [log10(945) 0],...
      'lin_bw', [log10(240) 0],...
      'lin_gain', [log10(520) 0],...
      'lin_lp_cutoff', [log10(945) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'nlin_fc_before', [log10(1000) 0],...
      'nlin_fc_after', [log10(1000) 0],...
      'nlin_bw_before', [log10(175) 0],...
      'nlin_bw_after', [log10(175) 0],...
      'nlin_lp_cutoff', [log10(1000) 0],...      
      'nlin_a', [log10(4598) 0],...
      'nlin_b', [log10(0.130) 0],...
      'nlin_c', [log10(0.25) 0] };

  f2000 = {...
      'flow',2000,...
      'fhigh',2000,...
      'basef',2000,...
      'bwmul',1,...      
      'lin_fc', [log10(1895) 0],...
      'lin_bw', [log10(390) 0],...
      'lin_gain', [log10(400) 0],...
      'lin_lp_cutoff', [log10(1895) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'nlin_fc_before', [log10(2000) 0],...
      'nlin_fc_after', [log10(2000) 0],...
      'nlin_bw_before', [log10(300) 0],...
      'nlin_bw_after', [log10(300) 0],...
      'nlin_lp_cutoff', [log10(2000) 0],...      
      'nlin_a', [log10(9244) 0],...
      'nlin_b', [log10(0.078) 0],...
      'nlin_c', [log10(0.25) 0] };
  
  f4000 = {...
      'flow',4000,...
      'fhigh',4000,...
      'basef',4000,...
      'bwmul',1,...      
      'lin_fc', [log10(3900) 0],...
      'lin_bw', [log10(620) 0],...
      'lin_gain', [log10(270) 0],...
      'lin_lp_cutoff', [log10(3900) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'nlin_fc_before', [log10(4000) 0],...
      'nlin_fc_after', [log10(4000) 0],...
      'nlin_bw_before', [log10(560) 0],...
      'nlin_bw_after', [log10(560) 0],...
      'nlin_lp_cutoff', [log10(4000) 0],...      
      'nlin_a', [log10(30274) 0],...
      'nlin_b', [log10(0.06) 0],...
      'nlin_c', [log10(0.25) 0] };

  f8000 = {...
      'flow',8000,...
      'fhigh',8000,...
      'basef',8000,...
      'bwmul',1,...      
      'lin_fc', [log10(7450) 0],...
      'lin_bw', [log10(1550) 0],...
      'lin_gain', [log10(250) 0],...
      'lin_lp_cutoff', [log10(7450) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'nlin_fc_before', [log10(8000) 0],...
      'nlin_fc_after', [log10(8000) 0],...
      'nlin_bw_before', [log10(1100) 0],...
      'nlin_bw_after', [log10(1100) 0],...
      'nlin_lp_cutoff', [log10(8000) 0],...      
      'nlin_a', [log10(76354) 0],...
      'nlin_b', [log10(0.035) 0],...
      'nlin_c', [log10(0.25) 0] };

  expparsYO = [f250; f500; f1000; f2000; f4000; f8000];

  %% average parameter set, table II
  f250avg = {...
      'flow',250,...
      'fhigh',250,...
      'basef',250,...
      'bwmul',1,...      
      'lin_fc', [log10(244) 0],...
      'lin_bw', [log10(100) 0],...
      'lin_gain', [log10(1150) 0],...
      'lin_lp_cutoff', [log10(244) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'lin_ngt', 3,...
      'nlin_fc_before', [log10(250) 0],...
      'nlin_fc_after', [log10(250) 0],...
      'nlin_bw_before', [log10(84) 0],...
      'nlin_bw_after', [log10(84) 0],...
      'nlin_lp_cutoff', [log10(250) 0],...      
      'nlin_a', [log10(2194) 0],...
      'nlin_b', [log10(0.45) 0],...
      'nlin_c', [log10(0.25) 0] };

  f500avg = {...
      'flow',500,...
      'fhigh',500,...
      'basef',500,...
      'bwmul',1,...      
      'lin_fc', [log10(480) 0],...
      'lin_bw', [log10(130) 0],...
      'lin_gain', [log10(850) 0],...
      'lin_lp_cutoff', [log10(480) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'lin_ngt', 3,...
      'nlin_fc_before', [log10(500) 0],...
      'nlin_fc_after', [log10(500) 0],...
      'nlin_bw_before', [log10(103) 0],...
      'nlin_bw_after', [log10(103) 0],...
      'nlin_lp_cutoff', [log10(500) 0],...      
      'nlin_a', [log10(5184) 0],...
      'nlin_b', [log10(0.28) 0],...
      'nlin_c', [log10(0.25) 0] };
  
  f1000avg = {...
      'flow',1000,...
      'fhigh',1000,...
      'basef',1000,...
      'bwmul',1,...      
      'lin_fc', [log10(965) 0],...
      'lin_bw', [log10(240) 0],...
      'lin_gain', [log10(520) 0],...
      'lin_lp_cutoff', [log10(965) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'lin_ngt', 3,...
      'nlin_fc_before', [log10(1000) 0],...
      'nlin_fc_after', [log10(1000) 0],...
      'nlin_bw_before', [log10(175) 0],...
      'nlin_bw_after', [log10(175) 0],...
      'nlin_lp_cutoff', [log10(1000) 0],...      
      'nlin_a', [log10(7558) 0],...
      'nlin_b', [log10(0.130) 0],...
      'nlin_c', [log10(0.25) 0] };
  
  f2000avg = {...
      'flow',2000,...
      'fhigh',2000,...
      'basef',2000,...
      'bwmul',1,...      
      'lin_fc', [log10(1925) 0],...
      'lin_bw', [log10(400) 0],...
      'lin_gain', [log10(410) 0],...
      'lin_lp_cutoff', [log10(1925) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'lin_ngt', 3,...
      'nlin_fc_before', [log10(2000) 0],...
      'nlin_fc_after', [log10(2000) 0],...
      'nlin_bw_before', [log10(300) 0],...
      'nlin_bw_after', [log10(300) 0],...
      'nlin_lp_cutoff', [log10(2000) 0],...      
      'nlin_a', [log10(9627) 0],...
      'nlin_b', [log10(0.078) 0],...
      'nlin_c', [log10(0.25) 0] };
  
  f4000avg = {...
      'flow',4000,...
      'fhigh',4000,...
      'basef',4000,...
      'bwmul',1,...      
      'lin_fc', [log10(3900) 0],...
      'lin_bw', [log10(660) 0],...
      'lin_gain', [log10(320) 0],...
      'lin_lp_cutoff', [log10(3900) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'lin_ngt', 3,...
      'nlin_fc_before', [log10(4000) 0],...
      'nlin_fc_after', [log10(4000) 0],...
      'nlin_bw_before', [log10(560) 0],...
      'nlin_bw_after', [log10(560) 0],...
      'nlin_lp_cutoff', [log10(4000) 0],...      
      'nlin_a', [log10(22288) 0],...
      'nlin_b', [log10(0.045) 0],...
      'nlin_c', [log10(0.25) 0] };

  f8000avg = {...
      'flow',8000,...
      'fhigh',8000,...
      'basef',8000,...
      'bwmul',1,...      
      'lin_fc', [log10(7750) 0],...
      'lin_bw', [log10(1450) 0],...
      'lin_gain', [log10(220) 0],...
      'lin_lp_cutoff', [log10(7750) 0],...      
      'nlin_ngt_before', 3,...
      'nlin_ngt_after', 3,...
      'nlin_nlp', 3,...
      'lin_ngt', 3,...
      'nlin_fc_before', [log10(8000) 0],...
      'nlin_fc_after', [log10(8000) 0],...
      'nlin_bw_before', [log10(1100) 0],...
      'nlin_bw_after', [log10(1100) 0],...
      'nlin_lp_cutoff', [log10(8000) 0],...      
      'nlin_a', [log10(43584) 0],...
      'nlin_b', [log10(0.030) 0],...
      'nlin_c', [log10(0.25) 0] };

  expparsavg = [f250avg; f500avg; f1000avg; f2000avg; f4000avg; f8000avg];

  %% input signal
  fs=64000;
  fsig = [250 500 1000 2000 4000 8000];
  T = 0.084;       
  t = (0:1/fs:T - 1/fs)';
  %basef = fsig;
  hp_fir = headphonefilter(fs);
  Tramp = 0.002;          % duration of ramps up and down
  ramp = (0:1/fs:Tramp - 1/fs)';
  sig=zeros(length(t),length(fsig));
  mask=zeros(length(t),length(fsig));
  
  %% experiment
  LSDB = 30:0.5:85;           % Signal level
  n=1;
  for jj = 30:0.5:85
    levelS(n) = 10^(jj/20);
    n = n+1;
  end
  
  LMDB = 30:0.5:100;          % Masker level
  n=1;
  for jj = 30:0.5:100
    levelM(n) = 10^(jj/20);
    n = n+1;
  end
  
  
  OMavg = zeros(length(levelM),length(fsig));
  OM = zeros(length(levelM),length(fsig));
  OSavg = zeros(length(levelS),length(fsig));
  OS = zeros(length(levelS),length(fsig));
  ratio = zeros(length(levelM),length(levelS),length(fsig));
  ratioavg = zeros(length(levelM),length(levelS),length(fsig));
  indx = zeros(length(levelS),length(fsig));
  indxavg = zeros(length(levelS),length(fsig));
  
  for ii = 1:length(fsig)
    
    % first calculate the model's response to the masker for every
    % possible masker level
    for kk = 1:length(levelM)
      % rampsignal Hann window instead of cosine ramps are used
      mask(:,ii) = rampsignal(sin(2*pi*fsig(ii)*0.6.*t),length(ramp)).*(2^0.5);
      insig = mask(:,ii) * levelM(kk);
      outsig = filter(hp_fir,1,insig);
      outsigavg = drnl(outsig, fs, expparsavg{ii,:});         % average parameter set, table II
      outsigavg = gaindb(outsigavg,-50);
      OMavg(kk,ii) = max(outsigavg(floor(length(insig)/2):end));    
      
      outsig = drnl(outsig, fs, expparsYO{ii,:});             % parameter set of YO, table I
      outsig = gaindb(outsig,-50);
      OM(kk,ii) = max(outsig(floor(length(insig)/2):end));            
    end
    
    % then calculate model's response to the signal and find for every
    % signal level the masker level such that the ratio signal/masker
    % is equal to a value of one
    for mm = 1:length(levelS)
      sig(:,ii) = rampsignal(sin(2*pi*fsig(ii).*t),length(ramp)).*(2^0.5);
      insig = sig(:,ii) * levelS(mm);
      outsig = filter(hp_fir,1,insig);
      outsigavg = drnl(outsig, fs, expparsavg{ii,:});         % average parameter set, table II
      outsigavg = gaindb(outsigavg,-50);
      OSavg(mm,ii) = max(outsigavg(floor(length(insig)/2):end)); 
      outsig = drnl(outsig, fs, expparsYO{ii,:});             % parameter set of YO, table I
      outsig = gaindb(outsig,-50);    
      OS(mm,ii) = max(outsig(floor(length(insig)/2):end)); 
      
      ratio(:,mm,ii) = OS(mm,ii) ./ OM(:,ii);                 % ratio for parameter set of YO, table I
      [~, indx(mm,ii)] = min(abs(1-ratio(:,mm,ii)),[],1);          
      ratioavg(:,mm,ii) = OSavg(mm,ii) ./ OMavg(:,ii);        % ratio for average parameter set, table II      
      [~, indxavg(mm,ii)] = min(abs(1-ratioavg(:,mm,ii)),[],1);          
    end
    
  end
  
  % same procedure for DRNL parameters calculated with regression lines, table III
  OMrl = zeros(length(levelM),length(fsig));
  OSrl = zeros(length(levelS),length(fsig));
  ratiorl = zeros(length(levelM),length(levelS),length(fsig));
  indxrl = zeros(length(levelS),length(fsig));
  
  for ii = 1:length(fsig)
    for kk = 1:length(levelM)
      insig = mask(:,ii) * levelM(kk);
      outsig = filter(hp_fir,1,insig);
      outsigrl = drnl(outsig, fs, 'flow', fsig(ii), 'fhigh', fsig(ii), 'basef', fsig(ii), 'lin_ngt', 3, 'nlin_ngt_before', 3, 'nlin_ngt_after', 3, 'nlin_nlp', 3);
      outsigrl = gaindb(outsigrl,-50);
      OMrl(kk,ii) = max(outsigrl(floor(length(insig)/2):end));                       
    end
    
    for mm = 1:length(levelS)
      insig = sig(:,ii) * levelS(mm);
      outsig = filter(hp_fir,1,insig);
      outsigrl = drnl(outsig, fs, 'flow', fsig(ii), 'fhigh', fsig(ii), 'basef', fsig(ii), 'lin_ngt', 3, 'nlin_ngt_before', 3, 'nlin_ngt_after', 3, 'nlin_nlp', 3);
      outsigrl = gaindb(outsigrl,-50);
      OSrl(mm,ii) = max(outsigrl(floor(length(insig)/2):end)); 
      
      ratiorl(:,mm,ii) = OSrl(mm,ii) ./ OMrl(:,ii);           
      [~, indxrl(mm,ii)] = min(abs(1-ratiorl(:,mm,ii)),[],1);                  
    end
  end
  
  %% plots    
  if flags.do_fig4
    subplot(2,3,1)
    plot(LSDB,LMDB(indx(:,1)),'-', 'LineWidth', 2)
    hold on
    plot(LSDB,LMDB(indxavg(:,1)),'-')
    plot(LSDB,LMDB(indxrl(:,1)),'--')
    plot(LSDB,LSDB,':')
    grid on
    set(gca,'XLim',[20 90],'Layer','top')
    axis([20,90,55,100]);
    title('250 Hz')
    xlabel('Signal level (dB SPL)')
    ylabel('Masker level (dB SPL)')
    
    subplot(2,3,2)
    plot(LSDB,LMDB(indx(:,2)),'-', 'LineWidth', 2)
    hold on
    plot(LSDB,LMDB(indxavg(:,2)),'-')
    plot(LSDB,LMDB(indxrl(:,2)),'--')
    plot(LSDB,LSDB,':')
    grid on
    set(gca,'XLim',[20 90],'Layer','top')
    axis([20,90,55,100]);
    title('500 Hz')
    xlabel('Signal level (dB SPL)')
    ylabel('Masker level (dB SPL)')
    
    subplot(2,3,3)
    plot(LSDB,LMDB(indx(:,3)),'-', 'LineWidth', 2)
    hold on
    plot(LSDB,LMDB(indxavg(:,3)),'-')
    plot(LSDB,LMDB(indxrl(:,3)),'--')
    plot(LSDB,LSDB,':')
    grid on
    set(gca,'XLim',[20 90],'Layer','top')
    axis([20,90,55,100]);
    title('1000 Hz')
    xlabel('Signal level (dB SPL)')
    ylabel('Masker level (dB SPL)')
    
    subplot(2,3,4)
    plot(LSDB,LMDB(indx(:,4)),'-', 'LineWidth', 2)
    hold on
    plot(LSDB,LMDB(indxavg(:,4)),'-')
    plot(LSDB,LMDB(indxrl(:,4)),'--')
    plot(LSDB,LSDB,':')
    grid on
    set(gca,'XLim',[20 90],'Layer','top')
    axis([20,90,55,100]);
    title('2000 Hz')
    xlabel('Signal level (dB SPL)')
    ylabel('Masker level (dB SPL)')
    
    subplot(2,3,5)
    plot(LSDB,LMDB(indx(:,5)),'-', 'LineWidth', 2)
    hold on
    plot(LSDB,LMDB(indxavg(:,5)),'-')
    plot(LSDB,LMDB(indxrl(:,5)),'--')
    plot(LSDB,LSDB,':')
    grid on
    set(gca,'XLim',[20 90],'Layer','top')
    axis([20,90,55,100]);
    title('4000 Hz')
    xlabel('Signal level (dB SPL)')
    ylabel('Masker level (dB SPL)')
   
    subplot(2,3,6)
    plot(LSDB,LMDB(indx(:,6)),'-', 'LineWidth', 2)
    hold on
    plot(LSDB,LMDB(indxavg(:,6)),'-')
    plot(LSDB,LMDB(indxrl(:,6)),'--')
    plot(LSDB,LSDB,':')
    grid on
    set(gca,'XLim',[20 90],'Layer','top')
    axis([20,90,55,100]);
    title('8000 Hz')
    xlabel('Signal level (dB SPL)')
    ylabel('Masker level (dB SPL)')
    legend('parameter set of YO, table I','average parameter set, table II','regression lines, table III','linear behavior') 
  end      
  
end;
